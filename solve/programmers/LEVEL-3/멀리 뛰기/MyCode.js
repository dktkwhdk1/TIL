function solution(n) {
  /**
   * n=1 : 1
   * 1
   *
   * n=2 : 2
   * 1+1
   * 2
   *
   * n=3 : 3
   * 1+1+1
   * 1+2
   * 2+1
   *
   * n=4 : 5
   * 1+1+1+1
   * 1+1+2
   * 1+2+1
   * 2+1+1
   * 2+2
   *
   * n=5 : 8
   * 1+1+1+1+1
   * 1+1+1+2
   * 1+1+2+1
   * 1+2+1+1
   * 1+2+2
   * 2+1+1+1
   * 2+2+1
   * 2+1+2
   *
   * n=6 : 13
   * 1+1+1+1+1+1
   * 1+1+1+1+2
   * 1+1+1+2+1
   * 1+1+2+1+1
   * 1+2+1+1+1
   * 2+1+1+1+1
   *
   * 1+2+2+1
   * 1+1+2+2
   * 1+2+1+2
   *
   * 2+1+2+1
   * 2+2+1+1
   * 2+1+1+2
   *
   * 2+2+2
   */

  const dp = [0, 1, 2];
  for (let i = 3; i <= n; i++) {
    dp[i] = (dp[i - 1] + dp[i - 2]) % 1234567;
  }
  return dp[n];
}

console.log(solution(4)); // 5
console.log(solution(3)); // 3
// https://programmers.co.kr/learn/courses/30/lessons/12914
